#!/usr/bin/python26 -B
"""
_simulator_

Created by Bjorn Barrefors on 26/9/2013

University of Nebraska-Lincoln
"""
###############################################################################
#                                                                             #
#                             S I M U L A T O R                               #
#                                                                             #
###############################################################################

import sys
import math

cluster = ({'a1': 0.010620268345481869, 'a3': -0.052104873127511539, 'a2': 4.742585834081015, 'a5': -5.4999877043076202, 'a4': -0.52025524526786993, 'a6': 10.465086609802389, 't_amb': -4.0901103074633118, 'util': 4, 'u1': 101.51642356595619, 'u0': 160.43893812153709, 'u2': 36.628846249856998, 'r': 0.32395385929863002}, {'a1': 0.011428812798698833, 'a3': -0.056811619270306944, 'a2': 5.2464195394739486, 'a5': -5.63820029650143, 'a4': -0.5938316951091186, 'a6': 11.247598650040453, 't_amb': -4.6746982824433889, 'util': 4, 'u1': 112.07532534384161, 'u0': 168.81654060750009, 'u2': 40.094601274975055, 'r': 0.37602566374824264}, {'a1': 0.012123163020263516, 'a3': -0.061817472060921627, 'a2': 5.5305595341620961, 'a5': -6.3381443414084613, 'a4': -0.63996280216349655, 'a6': 12.41170006403267, 't_amb': -5.0501735603377629, 'util': 4, 'u1': 121.46962790662941, 'u0': 191.16814975075522, 'u2': 44.066250309772101, 'r': 0.41520876440891646}, {'a1': 0.013386623382013704, 'a3': -0.066630066695747919, 'a2': 6.2659778394736758, 'a5': -6.722821781173157, 'a4': -0.68915927528556475, 'a6': 13.269529342228694, 't_amb': -5.3340298008726874, 'util': 4, 'u1': 133.04150554461521, 'u0': 205.81301984535142, 'u2': 45.65358045988134, 'r': 0.42286151005444755}, {'a1': 0.014222244203257583, 'a3': -0.074218469301398776, 'a2': 6.5130360404419934, 'a5': -7.1930937772311498, 'a4': -0.70423709733303563, 'a6': 14.142637896496552, 't_amb': -5.8325916289220485, 'util': 4, 'u1': 144.04810710429481, 'u0': 220.84118831001174, 'u2': 50.379651870726107, 'r': 0.47050267123978645}, {'a1': 0.015774148473279067, 'a3': -0.076483561130903682, 'a2': 7.1099121128296323, 'a5': -7.8116661106248495, 'a4': -0.78637582714354515, 'a6': 15.770290412973555, 't_amb': -6.346137307915086, 'util': 4, 'u1': 151.09121574185431, 'u0': 233.93955691538477, 'u2': 53.032166110844969, 'r': 0.48151312411785735}, {'a1': 0.0160833028316444, 'a3': -0.081655900238329762, 'a2': 7.5247847585528502, 'a5': -8.3656337295586312, 'a4': -0.81370986558762581, 'a6': 16.583812520663816, 't_amb': -6.4180422458221109, 'util': 4, 'u1': 168.87629561385666, 'u0': 254.32792830508467, 'u2': 56.905269476561891, 'r': 0.51935124953607947}, {'a1': 0.017775003949089832, 'a3': -0.088571682330618767, 'a2': 7.958424157418988, 'a5': -8.7429283654052359, 'a4': -0.85416691419063961, 'a6': 17.657862031086427, 't_amb': -7.1111488678064942, 'util': 4, 'u1': 178.72646802183448, 'u0': 263.07387031645294, 'u2': 61.962278768467009, 'r': 0.54818940276657191}, {'a1': 0.018385843903145026, 'a3': -0.092398378082356486, 'a2': 8.2920583686035751, 'a5': -9.0531267268980464, 'a4': -0.93425597100823898, 'a6': 18.460768364400906, 't_amb': -7.4669893978824033, 'util': 4, 'u1': 188.23357466681992, 'u0': 281.63024692054228, 'u2': 65.402095144564925, 'r': 0.59854208983172008}, {'a1': 0.019800568858432368, 'a3': -0.097726587023348924, 'a2': 8.6460722538598827, 'a5': -9.8322257396385861, 'a4': -0.95226407870954299, 'a6': 19.820032311553522, 't_amb': -7.6006328154241318, 'util': 4, 'u1': 195.71460127466722, 'u0': 292.64477707384941, 'u2': 68.716149384294724, 'r': 0.62040335671797242}, {'a1': 0.020548290942767191, 'a3': -0.10118651805134878, 'a2': 9.0306367194392276, 'a5': -10.237578787639276, 'a4': -1.0369628241530995, 'a6': 20.857300898409207, 't_amb': -8.007275182193343, 'util': 4, 'u1': 207.98967048864284, 'u0': 301.97608518951864, 'u2': 71.320442422420882, 'r': 0.66540124919431776}, {'a1': 0.0214005568562163, 'a3': -0.10607085937089873, 'a2': 9.8350980700775192, 'a5': -10.932300527939505, 'a4': -1.0785279333769913, 'a6': 21.534251921642149, 't_amb': -8.6164974801396479, 'util': 4, 'u1': 213.82053268662534, 'u0': 317.19304002007112, 'u2': 74.061719231823531, 'r': 0.68392334173903901}, {'a1': 0.022787299530130554, 'a3': -0.11186639959264939, 'a2': 9.9996833900159565, 'a5': -11.172573397047307, 'a4': -1.1388624901881836, 'a6': 22.660655977963987, 't_amb': -9.1284352417444001, 'util': 4, 'u1': 224.6573128956351, 'u0': 332.60207947429387, 'u2': 80.118915721145157, 'r': 0.71902936365846581}, {'a1': 0.023572333250028686, 'a3': -0.11526366483700215, 'a2': 10.618410826071338, 'a5': -11.990147565424374, 'a4': -1.1912775384639707, 'a6': 23.988993409406415, 't_amb': -9.2812190277269053, 'util': 4, 'u1': 237.93401668278307, 'u0': 349.3432657779598, 'u2': 83.32676011271819, 'r': 0.76307151499983983}, {'a1': 0.024009393611645856, 'a3': -0.12236601278985895, 'a2': 10.988870245407496, 'a5': -12.374567818575033, 'a4': -1.2188617538180222, 'a6': 24.066393078727284, 't_amb': -9.7602425829965274, 'util': 4, 'u1': 244.63710253558864, 'u0': 363.70388539442314, 'u2': 85.668032080268944, 'r': 0.76841065688785892}, {'a1': 0.025534767904748526, 'a3': -0.12780362873193796, 'a2': 11.623241245644815, 'a5': -12.539061463145647, 'a4': -1.2528723388490779, 'a6': 25.064568517426363, 't_amb': -10.097080138360479, 'util': 4, 'u1': 259.07516918456275, 'u0': 387.45636939152547, 'u2': 87.72877588206957, 'r': 0.80735077510309439}, {'a1': 0.0264404355516559, 'a3': -0.13045079839098489, 'a2': 12.008744765481396, 'a5': -13.11390134818555, 'a4': -1.3052618918427665, 'a6': 26.066046165914493, 't_amb': -10.586988836731678, 'util': 4, 'u1': 268.14579108392843, 'u0': 396.18312764076649, 'u2': 93.036162228050031, 'r': 0.84813784895913646}, {'a1': 0.027451783552206527, 'a3': -0.13728201273570095, 'a2': 12.237022027653014, 'a5': -13.62987622048802, 'a4': -1.3902579066222025, 'a6': 27.601720601784304, 't_amb': -11.052330385994427, 'util': 4, 'u1': 275.01794959838901, 'u0': 412.25629731932651, 'u2': 95.009002253440741, 'r': 0.88363717111738083}, {'a1': 0.028158987740231491, 'a3': -0.14342150929213485, 'a2': 12.822678412144747, 'a5': -14.394890769326528, 'a4': -1.4446319366967839, 'a6': 28.762874077381003, 't_amb': -11.512519637628294, 'util': 4, 'u1': 289.01732267823297, 'u0': 427.31314791760116, 'u2': 99.87815868573459, 'r': 0.91723471498870401}, {'a1': 0.029618510800779638, 'a3': -0.14863543028388504, 'a2': 13.151864469379309, 'a5': -14.594684495229872, 'a4': -1.4794553307306979, 'a6': 29.667969700863633, 't_amb': -11.879197259293585, 'util': 4, 'u1': 294.09865048616695, 'u0': 440.69727858758233, 'u2': 104.88494900175854, 'r': 0.93770945735571265})

kFreq = [[1.2279622979193634, 1.3077917432997361, 1.394528027474552, 1.6014204405438044, 1.7400425688892978, 1.8564081433283077, 2.0355855322890406, 2.0394099731937283, 2.3678687949185284, 2.3497931581477856], [1.1828483451104106, 1.3381987243679687, 1.5179263237251157, 1.5783411896122144, 1.7075905404508127, 1.7820234689137979, 1.929064211723206, 2.1883802717694461, 2.1709160670660697, 2.3957645660320974], [1.1688897940754046, 1.2655011628696893, 1.4883316316532076, 1.5863648181003518, 1.7633809049685838, 1.8129203558010405, 1.9061443140525769, 2.211325736838488, 2.2883828690346877, 2.3845423467968327], [1.1613270231669965, 1.3389158538956707, 1.4627553079369791, 1.6324030655667936, 1.8047508997505988, 1.8538136650010195, 1.9589790063419068, 2.1070376753946398, 2.2429785598825802, 2.3688272606924135], [1.1957924699500457, 1.310885038608407, 1.493250189494232, 1.5421103485320162, 1.7553344285732497, 1.8976184838216963, 1.8997108144186421, 2.1878353207272263, 2.2090526353959055, 2.2936322149442989], [1.1991232584924654, 1.3510091925410708, 1.5036913073813458, 1.6432907150806479, 1.7822144285564434, 1.8221500712028547, 1.937013260645795, 2.224960993411321, 2.3372962604638952, 2.4258903349493068], [1.1373606881563147, 1.2786035517009797, 1.4762906254216521, 1.6047172786854091, 1.8108310724791037, 1.7831484005616176, 1.9375577649297275, 2.2182621555787048, 2.3182695357352192, 2.4562648088827284], [1.1479265417020723, 1.348838635626781, 1.441848813503839, 1.5921159576844202, 1.6779815169278767, 1.8085094703276021, 2.0549704958893216, 2.0703672772707704, 2.307489917311905, 2.3529666160748279], [1.1412677450009434, 1.3552264488840111, 1.5152300346744447, 1.6207863209710869, 1.7203414451899892, 1.8400985298793631, 2.0917831111859657, 2.1395489180079652, 2.2551737403819492, 2.3228762834059977], [1.1434862430699879, 1.3395190929656577, 1.3935370552620021, 1.6034791411061791, 1.7912956671344686, 1.805751106924695, 2.0104592164006476, 2.1901889739761753, 2.2990036728089045, 2.4631978081828447], [1.1955742512999756, 1.3049566352909536, 1.4412586999006978, 1.5827199617539069, 1.7385074290350064, 1.8423756367672373, 2.0787364432679096, 2.0510030391403595, 2.3387897253503351, 2.456887986909881], [1.2435813606955155, 1.3498417728990137, 1.3956410443601357, 1.6701634977617776, 1.8154390728476864, 1.8710425160920332, 1.9913114309180306, 2.139222233425909, 2.3241556686146438, 2.330190649153598], [1.184292515685567, 1.3178299403875282, 1.4413146817500424, 1.595604038051581, 1.6734764423445754, 1.9397542878601111, 1.9840546517321802, 2.20390866752606, 2.1765530332954377, 2.4401207545363728], [1.1875624046422431, 1.2719043486686301, 1.5274518848248695, 1.5658361664348561, 1.6586944194028448, 1.8121461635239786, 1.9345627892414312, 2.2319280211049057, 2.2257470652473796, 2.3479400878701981], [1.1486762699389568, 1.3081623842386445, 1.4324054425753001, 1.5829652459254919, 1.735642716885911, 1.7960292391209602, 1.9900255662137047, 2.0343680457300222, 2.3126649515519824, 2.4202983589781879], [1.2321825934710644, 1.3389247744716639, 1.469130814527881, 1.6708337892287473, 1.7290051461274982, 1.9078903481929377, 2.0624125803471518, 2.1233764595368871, 2.1761958372224646, 2.3048419395464697], [1.167965212946857, 1.352449564114653, 1.4961643943766048, 1.6145482224984018, 1.728613722638348, 1.7910950725972616, 1.9520995415960851, 2.0339308692745846, 2.3393043852304829, 2.3929847807376503], [1.1972547608724622, 1.3303696551808526, 1.4958417373245942, 1.6712276749336834, 1.7322853689807767, 1.858739431053021, 2.0832810790292209, 2.0882663166199706, 2.2998658718689562, 2.2785309424366029], [1.2551931597301715, 1.2909387786158133, 1.4400179622511102, 1.6134604875543435, 1.7579182897208403, 1.8411975818156425, 1.989128472794814, 2.0906576216982189, 2.2598027670160907, 2.287560784851157], [1.2404935115503641, 1.3883306279859673, 1.5056782342135877, 1.6159884544575023, 1.7500985536216929, 1.9153900193210101, 1.981541331882855, 2.168605483556747, 2.168832513924372, 2.471654174095506]]

def maxTemp(core, freq):
    # Based on cpu properties and frequency, return the maximum possible temperature for core
    f = freq
    a1 = cluster[core]['a1']
    a2 = cluster[core]['a2']
    a3 = cluster[core]['a3']
    a4 = cluster[core]['a4']
    a5 = cluster[core]['a5']
    a6 = cluster[core]['a6']
    r = cluster[core]['r']
    t_amb = cluster[core]['t_amb']
    A = a1*r
    B = a3*r*f + a4*r - 1
    C = a2*r*math.pow(f,2) + a5*f*r + a6*r + t_amb
    max_temp = -B/(2*A) - math.sqrt(math.pow(B,2) - 4*A*C)/(2*A)
    return max_temp

def power(core, freq, util):
    # Based on cpu properties and a frequency, return the power consumption at maximum temperature
    f = freq
    if f == 1.197000:
        u1 = cluster[core]['u1']
        u2 = cluster[core]['u2']
        u0 = cluster[core]['u0']
        power1 = 0.1*(u1*util - u2*math.pow(util,2) + u0)
        return power1
    a1 = cluster[core]['a1']
    a2 = cluster[core]['a2']
    a3 = cluster[core]['a3']
    a4 = cluster[core]['a4']
    a5 = cluster[core]['a5']
    a6 = cluster[core]['a6']
    r = cluster[core]['r']
    t_amb = cluster[core]['t_amb']
    t = maxTemp(core, freq)
    power1 = a1*math.pow(t,2) + a2*math.pow(f,2) + a3*f*t + a4*t + a5*f + a6
    return power1

################################################################################
#                                                                              #
#                                 M A I N                                      #
#                                                                              #
################################################################################

def main():
    """
    __main__


    """
    tasks = [150, 200, 300]
    util = [20, 35]
    alg = ['HMWG', 'HBaBG']

    files = []

    for u in util:
        for t in tasks:
            for a in alg:
                files.append('u%dt%da%s' % (u, t, a))

    fd = open('Schedule', 'r')
    lines = fd.readlines()
    j = 0
    i = 1
    for line in lines:
        line = line.strip()
        l = line.partition("\t")
        cpu = l[0]
        if (i == 21):
            i = 1
            j += 1
        if (cpu == str(i)):
            if l[2] == str(0):
                p = 0
            else:
                u = float(l[2])
                u = u/4
                for f in kFreq[i-1]:
                    if (f/kFreq[i-1][9]) >= (u):
                        p = power(i - 1, f, u)
                        break
            fw = open(files[j], 'a')
            fw.write(str(p) + '\n')
            fw.close()
            i += 1
    fd.close()
    return 0

if __name__ == '__main__':
    sys.exit(main())
